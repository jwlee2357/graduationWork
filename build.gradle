plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.web3j" version "4.12.0"
}

group = 'graduationWork'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.mindrot:jbcrypt:0.4'
	implementation 'javax.servlet:jstl:1.2'
	implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'

	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// tasks.named('test') {
// 	useJUnitPlatform()
// }

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file('src/main/generated')
}

jar {
        enabled=false
}

bootJar {
	mainClass = 'graduationWork.server.ServerApplication'
}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}